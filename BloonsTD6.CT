<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Current supported version: v43.2.8081 (may crash on newer versions)"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"MAKE SURE "ACTIVATE MONO FEATURES" IS ENABLED WHEN BTD6 IS SELECTED!!"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Safe for unflagged accs (Check active box to enable hack)"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Damage edit"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Towers.Projectiles.Behaviors.DamageModel.Clone+00000052</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Pierce edit"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Towers.Projectiles.ProjectileModel.Clone+0000009A</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Infinite Tier 5s"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Simulation.Input.TowerInventory.IsPathTierLocked+000000AB)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r14d,[rdx+rcx*4+21]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 74 8A 20
//mov r14d,[rdx+rcx*4+20]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Hypersonic Towers"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Weapons.WeaponModel.Clone+00000099)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm6,[rbx+60]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 73 70
//movss xmm6,[rbx+70]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Remove ability cooldowns"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Behaviors.Abilities.AbilityModel.Clone+0000008B)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm7,[rdi+00000081]

exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 BF 80 00 00 00
//movss xmm7,[rdi+00000080]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Free base towers (DO NOT ENABLE WITH PLACE TOWERS ANYWHERE)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+000000CA)
define(addy2,Assets.Scripts.Models.Gameplay.Mods.GlobalCostModModel.Mutate+0000024B)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm9,[rdi+20]

exit:
jmp returnhere

addy:
jmp newmem
nop
returnhere:


 //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mulss xmm0,[rsi+20]

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:




 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 44 0F 10 4F 40
//movss xmm9,[rdi+40]

//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
addy2:
db F3 0F 59 46 40
//mulss xmm0,[rsi+40]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Free upgrades"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Gameplay.Mods.GlobalCostModModel.Mutate+00000476)
define(addy2,Assets.Scripts.Models.Towers.Upgrades.UpgradeModel.Clone+0000004B)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movd xmm0,[rdi+20]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov ebp,[rdi+20]
mov r14d,[rdi+34]

exit2:
jmp returnhere2

addy2:
jmp newmem2
nop 2
returnhere2:
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 66 0F 6E 47 30
//movd xmm0,[rdi+30]
dealloc(newmem2)
addy2:
db 8B 6F 30 44 8B 77 34
//mov ebp,[rdi+30]
//mov r14d,[rdi+34]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Place towers in co-op areas"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+0000031B)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, 1

exit:
jmp returnhere

addy:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 0F B6 87 10 01 00 00
//movzx eax,byte ptr [rdi+00000110]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Make towers always sellable"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+00000326)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, 1

exit:
jmp returnhere

addy:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 0F B6 87 11 01 00 00
//movzx eax,byte ptr [rdi+00000111]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Line of sight bypass"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Projectiles.ProjectileModel.Clone+000000E1)
define(addy2,Assets.Scripts.Models.Towers.Behaviors.Attack.AttackModel.Clone+000000EC)
define(addy3,Assets.Scripts.Models.Towers.Behaviors.Emissions.LineProjectileEmissionModel.Clone+00000101)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r15d, 1

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov ebp, 1

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:
 
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem3,2048,addy3)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode3:
mov eax, 1
movss xmm8,[rdi+48]

exit3:
jmp returnhere3

addy3:
jmp newmem3
nop 5
returnhere3:



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 0F B6 7F 4C
//movzx r15d,byte ptr [rdi+4C]
dealloc(newmem2)
addy2:
db 41 0F B6 6E 5C
//movzx ebp,byte ptr [r14+5C]
dealloc(newmem3)
addy3:
db 0F B6 47 50 F3 44 0F 10 47 48
//movzx eax,byte ptr [rdi+50]
//movss xmm8,[rdi+48]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Place towers (almost) anywhere"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.IsPlaceableInAreaType+0000003F)
define(addy2,Assets.Scripts.Models.Towers.TowerModel.Clone+000000CF)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov edx, edx

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
movss xmm6,[rdi+24]

exit2:
jmp returnhere2

addy2:
jmp newmem2
nop
returnhere2:



 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 41 8B 54 80 20
//mov edx,[r8+rax*4+20]
dealloc(newmem2)
addy2:
db F3 0F 10 77 44 F3 44 0F 10 47 4C
//movss xmm6,[rdi+44], movss xmm8,[rdi+4C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Disable bloon immune props (magic can pop purples)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Projectiles.Behaviors.DamageModel.Clone+0000006D)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov esi,[rbx+24]
mov edi,[rbx+48]

exit:
jmp returnhere

addy:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 8B 73 44 8B 7B 48
//mov esi,[rbx+44]
//mov edi,[rbx+48]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Reduce hero cost to lvl up"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Behaviors.HeroModel.Clone+0000004C)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm7,[rdi+24]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 7F 34
//movss xmm7,[rdi+34]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Remove golden bloon I-frames"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Bloons.Behaviors.GoldenBloonModel.Clone+00000089)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm11,[r13+24]

exit:
jmp returnhere

addy:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 45 0F 10 5D 44
//movss xmm11,[r13+44]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"NOT safe for unflagged accs (Check active box to enable hack)"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Send bloons all at once"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Rounds.BloonGroupModel.Clone+00000055)
define(addy2,Assets.Scripts.Models.Rounds.BloonGroupModel.Clone+0000005A)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm6,[rbx+28]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
movss xmm7,[rbx+2C]

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 73 38
//movss xmm6,[rbx+38]
dealloc(newmem2)
addy2:
db F3 0F 10 7B 3C
//movss xmm7,[rbx+3C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Edit cash-per-pop"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Bloons.Behaviors.DistributeCashModel.Clone+00000058</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Free XP upgrades (DONT ENABLE WITH FREE TOWERS + UPGRADES)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Upgrades.UpgradeModel.Clone+0000004E)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r14d,[rdi+24]
mov rbx,[rdi+38]

exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 77 34 48 8B 5F 38
//mov r14d,[rdi+34]
//mov rbx,[rdi+38]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
