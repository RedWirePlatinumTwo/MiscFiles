<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="46">
  <CheatEntries>
    <CheatEntry>
      <ID>25</ID>
      <Description>"Current supported version: 50.1.9701 (may crash on newer versions)"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>1</ID>
      <Description>"MAKE SURE "ACTIVATE MONO FEATURES" IS ENABLED WHEN BTD6 IS SELECTED!!"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>26</ID>
      <Description>"Activate the cheats you want *BEFORE* loading into a map"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>27</ID>
      <Description>"&lt;-------&gt;"</Description>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"Safe for unflagged accs (Check active box to enable hack)"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>0</ID>
          <Description>"Infinite Tier 5s"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Simulation.Input.TowerInventory.IsPathTierLocked+000000A1)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r14d,[rdx+rcx*4+21]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 74 8A 20
//mov r14d,[rdx+rcx*4+20]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>3</ID>
          <Description>"Hypersonic Towers (Do NOT use with Corvus)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Weapons.WeaponModel.Clone+00000099)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm6,[rbx+60]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 73 70
//movss xmm6,[rbx+70]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"Remove ability cooldowns"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Behaviors.Abilities.AbilityModel.Clone+00000085)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm6,[rdi+00000081]

exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 B7 88 00 00 00
//movss xmm7,[rdi+00000088]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>6</ID>
          <Description>"Free base towers"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+000000BD)
define(addy2,Assets.Scripts.Models.Gameplay.Mods.GlobalCostModModel.Mutate+0000024B)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm7,[rsi+40]

exit:
jmp returnhere

addy:
jmp newmem
nop
returnhere:


 //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mulss xmm0,[rsi+20]

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:




 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 7E 60
//movss xmm7,[rsi+60]

//code from here till the end of the code will be used to disable the cheat
dealloc(newmem2)
addy2:
db F3 0F 59 46 60
//mulss xmm0,[rsi+60]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"Free upgrades"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Gameplay.Mods.GlobalCostModModel.Mutate+00000476)
define(addy2,Assets.Scripts.Models.Towers.Upgrades.UpgradeModel.Clone+00000063)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movd xmm0,[rsi+20]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov eax,[rdi+20]
mov rdi,[rdi+58]

exit2:
jmp returnhere2

addy2:
jmp newmem2
nop 2
returnhere2:
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 66 0F 6E 46 30
//movd xmm0,[rsi+30]
dealloc(newmem2)
addy2:
db 8B 47 30 48 8B 7F 58
//mov eax,[rdi+30]
//mov rdi,[rdi+58]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>11</ID>
          <Description>"Make towers always sellable"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+00000329)
define(addy2,Assets.Scripts.Models.Towers.TowerModel.Clone+00000334)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, 1

exit:
jmp returnhere

addy:
jmp newmem
nop 2
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov eax, 0

exit2:
jmp returnhere2

addy2:
jmp newmem2
nop 2
returnhere2:


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 0F B6 86 29 01 00 00
//movzx eax,byte ptr [rdi+00000129]
dealloc(newmem2)
addy2:
db 0F B6 86 2A 01 00 00
//movzx eax,byte ptr [rdi+0000012A]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Line of sight bypass"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Projectiles.ProjectileModel.Clone+00000123)
define(addy2,Assets.Scripts.Models.Towers.Behaviors.Attack.AttackModel.Clone+000000E6)
define(addy3,Assets.Scripts.Models.Towers.Behaviors.Emissions.LineProjectileEmissionModel.Clone+0000010A)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, 1
mov [rsp+00000180],al

exit:
jmp returnhere

addy:
jmp newmem
nop 6
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
mov r14d, 1

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:
 
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem3,2048,addy3)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode3:
mov eax, 1
movss xmm9,[rdi+48]

exit3:
jmp returnhere3

addy3:
jmp newmem3
nop 5
returnhere3:



[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 0F B6 47 4C 88 84 24 80 01 00 00
//movzx eax,byte ptr [rdi+4C]
//mov [rsp+00000180],al
dealloc(newmem2)
addy2:
db 44 0F B6 73 5C
//movzx r14d,byte ptr [rbx+5C]
dealloc(newmem3)
addy3:
db 0F B6 47 50 F3 44 0F 10 4F 48
//movzx eax,byte ptr [rdi+50]
//movss xmm9,[rdi+48]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>15</ID>
          <Description>"Place towers anywhere"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.IsPlaceableInAreaType+0000003F)
define(addy2,Assets.Scripts.Models.Towers.Behaviors.CircleFootprintModel.Clone+00000048)
define(addy3,Assets.Scripts.Models.Towers.Behaviors.RectangleFootprintModel.Clone+0000004D)
define(addy4,Assets.Scripts.Models.Towers.Behaviors.RectangleFootprintModel.Clone+00000055)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov edx, edx
nop
nop
nop

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

 //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
movss xmm6,[rbx+14]

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:

  //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem3,2048,addy3)
label(returnhere3)
label(originalcode3)
label(exit3)

newmem3: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode3:
movss xmm6,[rbx+20]

exit3:
jmp returnhere3

addy3:
jmp newmem3
returnhere3:

 //code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem4,2048,addy4)
label(returnhere4)
label(originalcode4)
label(exit4)

newmem4: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode4:
movss xmm7,[rbp+20]

exit4:
jmp returnhere4

addy4:
jmp newmem4
returnhere4:

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 41 8B 54 81 20
//mov edx,[r9+rax*4+20]
dealloc(newmem2)
addy2:
db F3 0F 10 73 38
//movss xmm6,[rbx+38]
dealloc(newmem3)
addy3:
db F3 0F 10 75 38
//movss xmm6,[rbp+38]
dealloc(newmem4)
addy4:
db F3 0F 10 7D 3C
//movss xmm7,[rbx+3C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>29</ID>
          <Description>"Place towers in co-op areas"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.TowerModel.Clone+0000031E)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov eax, 1

exit:
jmp returnhere

addy:
jmp newmem
nop 2
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 0F B6 86 28 01 00 00
//movzx eax,byte ptr [rdi+00000128]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>16</ID>
          <Description>"Disable bloon immune props (magic can pop purples)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Projectiles.Behaviors.DamageModel.Clone+00000074)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r15d,[rdi+24]
mov r12d,[rdi+48]
exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 7F 44 44 8B 67 48
//mov r15d,[rdi+44]
//mov r12d,[rdi+48]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"Reduce hero cost to lvl up"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Behaviors.HeroModel.Clone+0000004C)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm7,[rdi+24]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 7F 34
//movss xmm7,[rdi+34]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"Remove golden bloon I-frames"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Bloons.Behaviors.GoldenBloonModel.Clone+00000089)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm11,[r13+24]

exit:
jmp returnhere

addy:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 45 0F 10 5D 44
//movss xmm11,[r13+44]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>28</ID>
          <Description>"Bloons deal 0 damage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Bloons.BloonModel.Clone+000001B3)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm9,[rsi+000000C1]

exit:
jmp returnhere

addy:
jmp newmem
nop 4
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 44 0F 10 8E C0 00 00 00
//movss xmm9,[rsi+000000C0]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>21</ID>
          <Description>"Damage edit"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Towers.Projectiles.Behaviors.DamageModel.Clone+0000005D</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>22</ID>
          <Description>"Pierce edit"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Towers.Projectiles.ProjectileModel.Clone+000000A0</Address>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"NOT safe for unflagged accs (Check active box to enable hack)"</Description>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>20</ID>
          <Description>"Send bloons all at once"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Rounds.BloonGroupModel.Clone+00000055)
define(addy2,Assets.Scripts.Models.Rounds.BloonGroupModel.Clone+0000005A)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
movss xmm6,[rbx+28]

exit:
jmp returnhere

addy:
jmp newmem
returnhere:

//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem2,2048,addy2)
label(returnhere2)
label(originalcode2)
label(exit2)

newmem2: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode2:
movss xmm7,[rbx+2C]

exit2:
jmp returnhere2

addy2:
jmp newmem2
returnhere2:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db F3 0F 10 73 38
//movss xmm6,[rbx+38]
dealloc(newmem2)
addy2:
db F3 0F 10 7B 3C
//movss xmm7,[rbx+3C]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>30</ID>
          <Description>"No bloons"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Rounds.BloonGroupModel.Clone+0000005F)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov ebp,[rbx+20]
call GameAssembly.il2cpp_method_get_class+60

exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 8B 6B 40 E8 59 8D 7E FF
//mov ebp,[rbx+40]
//call GameAssembly.il2cpp_method_get_class+60
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10</ID>
          <Description>"Free powers"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Powers.PowerModel.Clone+00000077)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r15d,[rsi+20]
movzx r12d,byte ptr [rsi+34]

exit:
jmp returnhere

addy:
jmp newmem
nop 4
returnhere:




[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 7E 30 44 0F B6 66 34
//mov r15d,[rsi+30]
//movzx r12d,byte ptr [rsi+34]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>23</ID>
          <Description>"Edit cash-per-pop"</Description>
          <ShowAsSigned>0</ShowAsSigned>
          <VariableType>4 Bytes</VariableType>
          <Address>Assets.Scripts.Models.Bloons.Behaviors.DistributeCashModel.Clone+0000004E</Address>
        </CheatEntry>
        <CheatEntry>
          <ID>24</ID>
          <Description>"Free XP upgrades (DONT ENABLE WITH FREE TOWERS/UPGRADES)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>define(addy,Assets.Scripts.Models.Towers.Upgrades.UpgradeModel.Clone+0000003D)
[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048,addy)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here

originalcode:
mov r13d,[rdi+24]
mov rbx,[rdi+38]

exit:
jmp returnhere

addy:
jmp newmem
nop 3
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
addy:
db 44 8B 77 34 48 8B 5F 38
//mov r14d,[rdi+34]
//mov rbx,[rdi+38]
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
